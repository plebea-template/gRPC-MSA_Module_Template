// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v1.180.0
//   protoc               v5.27.1
// source: hello.proto

/* eslint-disable */
import { Observable } from "rxjs";

import { GrpcMethod, GrpcStreamMethod } from "@nestjs/microservices";

export const protobufPackage = "hello";

export interface SayHelloRequest {}

export interface SayHelloResponse {
  message: string;
}

export const HELLO_PACKAGE_NAME = "hello";

export interface HelloServiceClient {
  SayHello(request: SayHelloRequest): Observable<SayHelloResponse>;
}

export interface HelloServiceController {
  SayHello(
    request: SayHelloRequest,
  ):
    | Promise<SayHelloResponse>
    | Observable<SayHelloResponse>
    | SayHelloResponse;
}

export function HelloServiceControllerMethods() {
  return function (constructor: Function) {
    const grpcMethods: string[] = ["SayHello"];
    for (const method of grpcMethods) {
      const descriptor: any = Reflect.getOwnPropertyDescriptor(
        constructor.prototype,
        method,
      );
      GrpcMethod("HelloService", method)(
        constructor.prototype[method],
        method,
        descriptor,
      );
    }
    const grpcStreamMethods: string[] = [];
    for (const method of grpcStreamMethods) {
      const descriptor: any = Reflect.getOwnPropertyDescriptor(
        constructor.prototype,
        method,
      );
      GrpcStreamMethod("HelloService", method)(
        constructor.prototype[method],
        method,
        descriptor,
      );
    }
  };
}

export const HELLO_SERVICE_NAME = "HelloService";
